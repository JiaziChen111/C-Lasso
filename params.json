{
  "name": "C-lasso",
  "tagline": "The replication data and files for Liangjun Su, Zhentao Shi and Peter Phillips (2015): “Identifying Latent Structures in Panel Data”",
  "body": "# Replication Package for “Identifying Latent Structures in Panel Data”\r\n\r\n* [Liangjun Su](http://www.mysmu.edu/faculty/ljsu/), [Zhentao Shi](http://www.zhentaoshi.com/) and [Peter Phillips](http://korora.econ.yale.edu/phillips/): [“Identifying Latent Structures in Panel Data”](http://onlinelibrary.wiley.com/doi/10.3982/ECTA12560/full), *Econometrica*, Vol.84, No.6, 2215-2264. \r\n\r\n### Computation Environment\r\nWe provide all code for the empirical applications and simulations in the paper. \r\nPlease contact Zhentao Shi ([zhentao.shi@cuhk.edu.hk](zhentao.shi@cuhk.edu.hk)) if you have any question about the code.\r\n\r\nThe results in the paper are generated under\r\n* [Matlab 8.5](http://www.mathworks.com/products/matlab/)\r\n* [CVX 2.1](http://cvxr.com/cvx/download/)\r\n* [Mosek 7.1](https://www.mosek.com/resources/downloads).\r\n\r\nCVX must be installed and linked with Matlab, and Mosek is invoked as the solver through the command `cvx_solver mosek`. Without Mosek, a user can still run the code with CVX if he comments out this line.\r\n\r\n### File Structure\r\n\r\nThe empirical applications can be exactly replicated by the commented `master.m` in folders\r\n* `app_saving_PLS`: for Section 5.1\r\n* `app_saving_PGMM`: for Section 5.1\r\n* `app_civil_war`: for Section 5.2\r\n* `app_democracy`: for Section S4.3\r\n\r\nData are also provided in each folder.\r\n\r\nThe workhorse scripts that execute the iterative algorithm in Section 3.1 of the Supplementary Material are\r\n* `PLS_est.m`: for PLS estimation\r\n* `PGMM_est.m`: for PGMM estimation\r\n* `PNL_est.m`: for the PPL (Panel Probit) estimation\r\n\r\nThe scripts in folders `simulations` generate the simulation results. The master files are either `master_**` or `**_super`. Super parameters, such as `N`, `T` and `Rep`, should be provided outside of the main function or script.\r\n\r\n### Implementation Tips\r\n\r\nAs emphasized in Section 3.2 of the Supplementary Material, we take advantage of convex programming to reduce the computational burden of high-dimensional optimization in each substep of the iterative algorithm. It is straightforward to utilize the convexity in the linear models. Probit regression with a linear index is a convex problem. To implement in CVX, we must formulate it as a disciplined convex programming (http://cvxr.com/dcp), which CVX accepts.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}